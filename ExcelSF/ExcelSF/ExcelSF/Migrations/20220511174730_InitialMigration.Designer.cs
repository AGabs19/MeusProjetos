// <auto-generated />
using System;
using ExcelSF.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using AppContext = ExcelSF.DataBase.AppContext;

#nullable disable

namespace ExcelSF.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220511174730_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExcelSF.Models.Autorizacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("IdGerente1")
                        .HasColumnType("bigint");

                    b.Property<long>("IdGerente2")
                        .HasColumnType("bigint");

                    b.Property<string>("ObservacaoFuncionario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacaoGerente1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacaoGerente2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StatusGerente1")
                        .HasColumnType("bit");

                    b.Property<bool>("StatusGerente2")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Autorizacao");
                });

            modelBuilder.Entity("ExcelSF.Models.Cargo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cargo");
                });

            modelBuilder.Entity("ExcelSF.Models.Contrato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<long?>("FuncionarioId")
                        .HasColumnType("bigint");

                    b.Property<double>("Salario")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("ExcelSF.Models.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CEP")
                        .HasColumnType("bigint");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longadouro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumeroCasa")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ExcelSF.Models.Ferias", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<bool>("AdiantamentoDecimoTerceiro")
                        .HasColumnType("bit");

                    b.Property<bool>("AutorizacaoGerente1")
                        .HasColumnType("bit");

                    b.Property<bool>("AutorizacaoGerente2")
                        .HasColumnType("bit");

                    b.Property<long?>("AutorizacaoId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataFim2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio2")
                        .HasColumnType("datetime2");

                    b.Property<long?>("HistoricoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PeriodoAquisitivoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AutorizacaoId");

                    b.HasIndex("HistoricoId");

                    b.HasIndex("PeriodoAquisitivoId");

                    b.ToTable("Ferias");
                });

            modelBuilder.Entity("ExcelSF.Models.Funcionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CPF")
                        .HasColumnType("bigint");

                    b.Property<long?>("EnderecoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sobrenome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("ExcelSF.Models.Historico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("QuantidadeDeDias")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UltimoPeriodo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Venda")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("ExcelSF.Models.PeriodoAquisitivo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("DataDaContratacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UltimoPeriodo")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PeriodoAquisitivo");
                });

            modelBuilder.Entity("ExcelSF.Models.Telefone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("ExcelSF.Models.Contrato", b =>
                {
                    b.HasOne("ExcelSF.Models.Cargo", "Cargo")
                        .WithMany()
                        .HasForeignKey("CargoId");

                    b.HasOne("ExcelSF.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Cargo");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ExcelSF.Models.Ferias", b =>
                {
                    b.HasOne("ExcelSF.Models.Autorizacao", "Autorizacao")
                        .WithMany()
                        .HasForeignKey("AutorizacaoId");

                    b.HasOne("ExcelSF.Models.Historico", "Historico")
                        .WithMany()
                        .HasForeignKey("HistoricoId");

                    b.HasOne("ExcelSF.Models.PeriodoAquisitivo", "PeriodoAquisitivo")
                        .WithMany()
                        .HasForeignKey("PeriodoAquisitivoId");

                    b.Navigation("Autorizacao");

                    b.Navigation("Historico");

                    b.Navigation("PeriodoAquisitivo");
                });

            modelBuilder.Entity("ExcelSF.Models.Funcionario", b =>
                {
                    b.HasOne("ExcelSF.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
